import {GameData, Teams} from "../../types";

const names = [
  "Aspect",
  "Kraken",
  "Bender",
  "Lynch",
  "Big Papa",
  "Mad Dog",
  "Bowser",
  "O'Doyle",
  "Bruise",
  "Psycho",
  "Cannon",
  "Ranger",
  "Clink",
  "Ratchet",
  "Cobra",
  "Reaper",
  "Colt",
  "Rigs",
  "Crank",
  "Ripley",
  "Creep",
  "Roadkill",
  "Daemon",
  "Ronin",
  "Decay",
  "Rubble",
  "Diablo",
  "Sasquatch",
  "Doom",
  "Scar",
  "Dracula",
  "Shiver",
  "Dragon",
  "Skinner",
  "Fender",
  "Skull Crusher",
  "Fester",
  "Slasher",
  "Fisheye",
  "Steelshot",
  "Flack",
  "Surge",
  "Gargoyle",
  "Sythe",
  "Grave",
  "Trip",
  "Gunner",
  "Trooper",
  "Hash",
  "Tweek",
  "Hashtag",
  "Vein",
  "Indominus",
  "Void",
  "Ironclad",
  "Wardon",
  "Killer",
  "Wraith",
  "Knuckles",
  "Zero",
  'Steel',
  "Kevlar",
  "Lightning",
  "Tito",
  "Bullet-Proof",
  "Fire-Bred",
  "Titanium",
  "Hurricane",
  "Ironsides",
  "Iron-Cut",
  "Tempest",
  'Iron Heart',
  "Steel Forge",
  "Pursuit",
  "Steel Foil",
  "Sick Rebellious Names",
  "Upsurge",
  "Uprising",
  "Overthrow",
  "Breaker",
  "Sabotage",
  "Dissent",
  "Subversion",
  "Rebellion",
  'Insurgent',
  "Accidental Genius",
  'Acid Gosling',
  "Admiral Tot",
  "AgentHercules",
  "Airport Hobo",
  "Alley Frog",
  "Alpha",
  'AlphaReturns',
  'Angel',
  "AngelsCreed",
  "Arsenic Coo",
  "Atomic Blastoid",
  "Automatic Slicer",
  "Baby Brown",
  "Back Bett",
];

const winner = Math.random() < 0.5 ? Teams.Orange : Teams.Cyan;

export const gameData: GameData = {
  winner: winner,
  orange: {
    name: Teams.Orange,
    players: Array.from({length: 40}, (element, index) => {
      const score = Math.floor(Math.random() * (winner === Teams.Orange ? 200 : 100));
  
      return {
        id: index,
          name: names.splice(Math.floor(Math.random() * names.length), 1)?.[0],
        score,
        dead: winner === Teams.Orange ? Math.random() < 0.5 : Math.random() < 0.8,
        kills: Math.floor(score * (winner === Teams.Orange ? 2 : 1) / 10),
        deaths: Math.floor(score * (winner === Teams.Orange ? 1 : 2) / 10),
      }
    }).sort((a, b) => b.score - a.score)
  },
  cyan: {
    name: Teams.Cyan,
    players: Array.from({length: 40}, (element, index) => {
      const score = Math.floor(Math.random() * (winner === Teams.Cyan ? 200 : 100));
      
      return {
        id: index + 40,
        name: names.splice(Math.floor(Math.random() * names.length), 1)?.[0],
        score,
        dead: winner === Teams.Cyan ? Math.random() < 0.5 : Math.random() < 0.8,
        kills: Math.floor(score * (winner === Teams.Cyan ? 2 : 1) / 10),
        deaths: Math.floor(score * (winner === Teams.Cyan ? 1 : 2) / 10),
      }
    }).sort((a, b) => b.score - a.score)
  },
}
